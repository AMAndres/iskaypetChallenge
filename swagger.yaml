---
swagger: "2.0"
info:
  description:
    API definition of the code challenge proposed.
    
    Useful links
    - [GitHub project](https://github.com/AMAndres/iskaypetchallenge)
    - [Swagger PetStore editor](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml)
  version: "1.0.0"
  title: "IskayPet Code Challenge"
  termsOfService: "--"
  contact:
    email: "arenas.macineira.andres@gmail.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: localhost:8081
tags:
- name: "pets"
  description: "Everything about Pet entity"
- name: "kpis"
  description: "KPIs - Kei performance indicator"
schemes:
- "http"

paths:
  /pets:
    post:
      tags:
      - "pets"
      summary: "Add pet"
      description: "Operation to store pets"
      operationId: "addPet"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object to save"
        required: true
        schema:
          $ref: "#/definitions/AddPet"
      responses:
        201:
          description: "Pet object created"
          schema:
            $ref: "#/definitions/Pet"
        500:
          description: "Internal server error - Unexpected error while processing the request"
        608:
          description: "Gender or Species out of range"

    get:
      tags:
      - "pets"
      summary: "Get pets"
      description: "Returns every pet in the DB"
      operationId: "getAllPets"
      produces:
      - "application/json"
      responses:
        200:
          description: "List of pets"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Pet"
        204:
          description: "No content - No pets where found"
        500:
          description: "Internal server error - Unexpected error while processing the request"

  /pets/{petId}:
    get:
      tags:
      - "pets"
      summary: "Find pets by ID"
      description: "Returns a single pet"
      operationId: "getPetsById"
      produces:
      - "application/json"
      parameters:
      - name: "petId"
        in: "path"
        description: "ID of pet to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "Returns the pet associated with the ID"
          schema:
            $ref: "#/definitions/Pet"
        204:
          description: "No content - There is no pet in the system with the provided ID"
        500:
          description: "Internal server error - Unexpected error while processing the request"

  /pets/most_numerous_species:
    get:
      tags:
      - "kpis"
      summary: "Most numerous species kpi"
      operationId: "mostNumerousSpecies"
      produces:
      - "application/json"
      responses:
        200:
          description: "The kpi values"
          schema:
            $ref: "#/definitions/KpiMostNumerousSpecies"
        204:
          description: "No content - Can't provide this kpi because no pets are stored"
        500:
          description: "Internal server error - Unexpected error while processing the request"

  /pets/average_age:
    get:
      tags:
      - "kpis"
      summary: "Average age kpi"
      operationId: "averageAge"
      produces:
      - "application/json"
      parameters:
      - in: query
        name: species_name
        type: string
      responses:
        200:
          description: "The kpi values"
          schema:
            $ref: "#/definitions/KpiAverageAge"
        204:
          description: "No content - There are no pets for the species consulted"
        500:
          description: "Internal server error - Unexpected error while processing the request"

definitions:
  Pet:
    type: "object"
    required:
    - "id"
    - "name"
    - "gender"
    - "birthday"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "faro"
      species:
        type: "integer"
        minimum: 0
        maximum: 1
      gender:
        type: "integer"
        minimum: 0
        maximum: 1
      birthday:
        type: "string"
        format: "date"
        example: "2017-01-01"

  AddPet:
    type: "object"
    required:
    - "name"
    - "gender"
    - "birthday"
    properties:
      name:
        type: "string"
        example: "faro"
      species:
        type: "integer"
        minimum: 0
        maximum: 1
      gender:
        type: "integer"
        minimum: 0
        maximum: 1
      birthday:
        type: "string"
        format: "date"
        example: "2017-01-01"

  KpiMostNumerousSpecies:
    type: "object"
    required:
      - most_numerous_species
      - most_numerous_species_qty
    properties:
      most_numerous_species:
        type: "integer"
      most_numerous_species_description:
        type: "string"
        example: "dog"
      most_numerous_species_qty:
        type: "integer"

  KpiAverageAge:
    type: "object"
    properties:
      average_age:
        type: "number"
        format: "double"
        x-omitempty: false
      age_standard_deviation:
        type: "number"
        format: "double"
        x-omitempty: false